@model IPagedList<Business_Logic.Models.StoreItemModel>

@{
    ViewBag.Title = "AllProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using PagedList.Mvc;
@using PagedList;

<h2>AllProducts</h2>

<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Create StoreItem", "AddProduct", "Products", new { @class = "btn btn-info" })
    }
    @using (Html.BeginForm("AllProducts", "Products", FormMethod.Get))
    {
        <style type="text/css">
            #platformRating select,
            #platformRating p {
                display: inline;
                vertical-align: top;
                line-height: 28px;
            }
        </style>
        <div id="platformRating">
            <input type="text" name="search" placeholder="Enter product name" style="height: 35px;" />

            <select class="form-control" id="SortById" name="SortBy" style="height: 35px; width:130px;">
                <option style="height: 20px;">Sort By</option>
                <option style="height: 20px;">Price up</option>
                <option style="height: 20px;">Price down</option>
                @if (User.IsInRole("Admin"))
                {
                    <option style="height: 20px;">In Stock up</option>
                    <option style="height: 20px;">In Stock down</option>
                }

            </select>

            <input type="submit" name="submit" value="Search" style="height: 35px;" />
        </div>
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Images)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Discription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Brand)
        </th>
        @if (User.IsInRole("Admin"))
        {
            <th>
                @Html.DisplayNameFor(model => model.First().InStock)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <h2>No Records Found !</h2>
    }
    else
    {

        foreach (var item in Model)
        {
            <tr>

                <td>
                    @{
                        if (item.Images != null && item.Images.Count > 0)
                        {
                            <img src="data:image;base64,@System.Convert.ToBase64String(item.Images[0].Image)" width="50" height="50" />
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand)
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.InStock)
                    </td>
                }
                <td>
                    € @Html.DisplayFor(modelItem => item.PriceWithDiscount)
                </td>

                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id })

                    @if (User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        <br>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    }
                </td>
            </tr>
        }
    }

</table>
@Html.PagedListPager(Model, i => Url.Action("AllProducts", "Products", new { i, search = Request.QueryString["Search"], sortBy = Request.QueryString["SortBy"] }))
