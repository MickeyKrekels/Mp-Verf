@model Business_Logic.Models.CommentRatingModel

@{
    ViewBag.Title = "EditCommentRating";
}

<h2>EditCommentRating</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CommentRatingModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.StoreItemId)
        @Html.HiddenFor(model => model.CommentId)


        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UpVote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UpVote)
                    @Html.ValidationMessageFor(model => model.UpVote, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DownVote, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DownVote)
                    @Html.ValidationMessageFor(model => model.DownVote, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Report, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Report)
                    @Html.ValidationMessageFor(model => model.Report, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


            <div class="form-group">
                @Html.LabelFor(model => model.OpinionText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.OpinionText, new { maxlength = 2000, height = "250", width = "300" })
                        @Html.ValidationMessageFor(model => model.OpinionText, "", new {@class = "text-danger" })
                    </div>
                </div>
            </div>
        

        <div class="form-group">
            <div>
                @Html.ActionLink("Remove", "RemoveCommentRating", "Comment", new { commentRatingId = Model.Id }, new { @class = "btn btn-danger" })
                <input type="submit" value="Save" class="btn btn-success" style="margin-left:10px;" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Details", "Products", new { id = Model.StoreItemId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
